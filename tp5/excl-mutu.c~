#include "sem_pv.h"
#include <signal.h>

int shmid;
int *ptr;


void fin(int sig)
{
  shmctl(shmid, IPC_RMID, 0);
  if(sig != -1) detruire_semaphore();
  exit(sig);
}

main()
{
  int a,i,status;

  signal(SIGINT, fin);
  signal(SIGQUIT, fin);

  if((shmid=shmget(IPC_PRIVATE, 100*sizeof(int), IPC_CREAT|0600)) == -1)
  {
    perror("Creation du segment");
    exit(2);
  }


/*
  if((ptr=(int *)shmat(shmid, NULL, 0)) == (int)-1)
  {
    perror("Attachement du segment");
    fin(-1);
  }
*/
  
  ptr=(int *)shmat(shmid, NULL, 0);
  if(init_semaphore() < 0) fin(-1);
  if(val_sem(0, 1) < 0) fin(-2);

  ptr[0]=0;

  switch (fork())
  {
    case -1 : perror("Fork");
              fin(-2);
              break;

    case 0 : for(i=0; i<10; i++)
             {
               P(0);
               a=ptr[0];
               a++;
               ptr[0]=a;
	       printf("FILS %d--ptr[0]= %d \n",i,ptr[0]);
               V(0);
             }
             break;

    default : for(i=0; i<10; i++)
              {
                P(0);
                a=ptr[0];
                a++;
                ptr[0]=a;
		printf("PERE %d----------ptr[0]= %d \n",i,ptr[0]);
                V(0);
              }
              wait(&status);
              printf("2 x 1000 Incrementations, Compteur (AVEC Exclusion Mutuelle) : %d\n", ptr[0]);
              fin(-2);
  }
}
